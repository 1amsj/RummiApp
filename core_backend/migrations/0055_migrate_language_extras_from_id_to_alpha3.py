# Generated by Django 4.1.7 on 2023-10-19 19:36
import json
from functools import lru_cache

from django.db import migrations


def update_languages_management(apps, schema_editor):
    Extra = apps.get_model('core_backend', 'Extra')
    Language = apps.get_model('core_backend', 'Language')

    @lru_cache(maxsize=None)
    def get_language_by_id(language_id):
        found_language = Language.objects.get(id=language_id)
        if not found_language.alpha3:
            raise Exception(f'Failed to migrate because of missing alpha3, language_id={language_id}')

        return found_language

    keys_map = {
        'language_id': 'language_alpha3',
        'source_language_id': 'source_language_alpha3',
        'target_language_id': 'target_language_alpha3',
    }

    extras = Extra.objects.filter(key__in=keys_map.keys()).order_by('data')
    updated_extras = []

    for extra in extras:
        language_id = int(json.loads(extra.data))
        language = get_language_by_id(language_id)

        extra.key = keys_map[extra.key]
        extra.data = json.dumps(language.alpha3)

        updated_extras.append(extra)

    Extra.objects.bulk_update(updated_extras, ['key', 'data'])


def revert_languages_management(apps, schema_editor):
    Extra = apps.get_model('core_backend', 'Extra')
    Language = apps.get_model('core_backend', 'Language')

    @lru_cache(maxsize=None)
    def get_language_by_alpha3(language_alpha3):
        return Language.objects.get(alpha3=language_alpha3)

    keys_map = {
        'language_alpha3': 'language_id',
        'source_language_alpha3': 'source_language_id',
        'target_language_alpha3': 'target_language_id',
    }

    extras = Extra.objects.filter(key__in=keys_map.keys())
    updated_extras = []

    for extra in extras:
        alpha3 = json.loads(extra.data)
        language = get_language_by_alpha3(alpha3)

        extra.key = keys_map[extra.key]
        extra.data = json.dumps(str(language.id))
        
        updated_extras.append(extra)

    Extra.objects.bulk_update(updated_extras, ['key', 'data'])


class Migration(migrations.Migration):
    dependencies = [
        ('core_backend', '0054_remove_historicalprovider_certifications_and_more'),
    ]

    operations = [
        migrations.RunPython(update_languages_management, revert_languages_management),
    ]
