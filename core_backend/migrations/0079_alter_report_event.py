# Generated by Django 4.1.13 on 2025-03-28 23:28

from django.db import migrations, models
import django.db.models.deletion

def fix_duplicate_event_ids(apps, schema_editor):
    Report = apps.get_model('core_backend', 'Report')
    seen = {}
    for report in Report.objects.all().order_by('id'):
        if report.event_id in seen:
            # Si ya existe, se borra
            report.delete()
        else:
            seen[report.event_id] = report.id

def reverse_fix_duplicate_event_ids(apps, schema_editor):
    # No es necesario implementar la reversi√≥n
    pass

class Migration(migrations.Migration):

    dependencies = [
        (
            "core_backend",
            "0078_invoice_event_invoice_is_deleted_invoice_status_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(fix_duplicate_event_ids, reverse_fix_duplicate_event_ids),
        migrations.AlterField(
            model_name="report",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reports",
                to="core_backend.event",
                unique=True,
            ),
        ),
    ]
